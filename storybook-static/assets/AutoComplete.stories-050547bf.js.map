{"version":3,"file":"AutoComplete.stories-050547bf.js","sources":["../../src/utils/hooks/useClickOutside.ts","../../node_modules/nanoid/index.browser.js","../../node_modules/@20i/use-roving-tabindex-a11y/dist/use-roving-tabindex-a11y.esm.js","../../src/AutoComplete/AutoComplete.tsx"],"sourcesContent":["import { createRef, useEffect } from \"react\";\n\nexport default function useClickOutside(callback: (ev: Event) => void) {\n  const ref = createRef<HTMLDivElement>();\n  useEffect(() => {\n    function handleOutsideClick(ev: Event) {\n      if (ref.current && !ref.current.contains(ev.target as Node)) {\n        callback(ev);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n\n    return () => {\n      window.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [callback, ref]);\n\n  return ref;\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React__default, { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nvar useUUID = function useUUID(prefix) {\n  var _React$useState = useState(\"\" + (prefix ? prefix + '-' : '') + nanoid(5)),\n      id = _React$useState[0];\n\n  return id;\n};\nvar clampNumber = function clampNumber(num, a, b) {\n  return Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\n};\n\n// see: https://github.com/storybookjs/storybook/issues/9556\n\n/**\r\n * A custom Thing component. Neat!\r\n */\n\nvar Thing = function Thing(_ref) {\n  var children = _ref.children;\n  return React__default.createElement(\"div\", null, children || \"the snozzberries taste like snozzberries\");\n};\n/** Usage Instructions:\r\n * 1. Place returned ref on any ul, tableBody, or tableHeader (ex. <ul ref={listRef}>...</ul>)\r\n * 2. Give all focusable elements a tabindex of -1 (ex. <button tabIndex={-1}>...</button>)\r\n * 3. Give the one element you want to have the first default focus a tabindex of 0\r\n *      (ex. <ul ref={listRef}>\r\n *              <li><a tabIndex={0}>first link</a></li>\r\n *              ...\r\n *          </ul> )\r\n */\n\nvar useRovingTabIndex = function useRovingTabIndex() {\n  var instructionsId = useUUID();\n  var listRef = React__default.useCallback(function (list) {\n    var cleanUpFns = []; // add screen reader instructions\n\n    if (list != null && list.parentElement) {\n      // build instructions\n      var instructions = document.createElement('span');\n      instructions.id = instructionsId;\n      instructions.innerText = 'Use the up and down arrow keys to navigate the list and use the left and right arrow keys to navigate inside of the item';\n      instructions.style.border = 'none';\n      instructions.style.clip = 'rect(0 0 0 0)';\n      instructions.style.height = '1px';\n      instructions.style.margin = '-1px';\n      instructions.style.overflow = 'hidden';\n      instructions.style.padding = '0';\n      instructions.style.position = 'absolute';\n      instructions.style.top = '20px';\n      instructions.style.width = '1px';\n      instructions.setAttribute('data-useRovingTabIndex', 'true'); // If ref is on a a table section\n\n      if (list.parentElement instanceof HTMLTableElement) {\n        var existingCaption = list.parentElement.querySelector('caption');\n\n        if (existingCaption) {\n          var existingInstructions = existingCaption.querySelector('[data-useRovingTabIndex]'); // if instructions exist, don't append. Just use those instead\n\n          if (existingInstructions) {\n            instructions.id = existingInstructions.id;\n          } else {\n            existingCaption.append(instructions);\n          }\n        } else {\n          var newCaption = document.createElement('caption');\n          newCaption.append(instructions);\n          list.parentElement.prepend(newCaption);\n        }\n      } else {\n        list.parentElement.insertBefore(instructions, list);\n      }\n\n      list.setAttribute('aria-describedby', \"\" + (list.getAttribute('aria-describedby') ? list.getAttribute('aria-describedby') + ' ' : '') + instructions.id);\n      cleanUpFns.push(function () {\n        var _list$getAttribute;\n\n        list.setAttribute('aria-describedby', ((_list$getAttribute = list.getAttribute('aria-describedby')) == null ? void 0 : _list$getAttribute.replace(instructions.id, '')) + \" \" + instructions.id);\n        instructions.remove();\n      });\n    } // add keyboard arrow listeners\n\n\n    if (list) {\n      var onKeydown = function onKeydown(e) {\n        var listItemWithFocus = Array.from(list.childNodes).find(function (item) {\n          return item.querySelector('[tabindex]:not([tabindex=\"-1\"])');\n        });\n\n        var changeFocus = function changeFocus(nextFocusItem) {\n          // Prevent screen from scrolling with arrow keys\n          e.preventDefault();\n\n          if (listItemWithFocus && nextFocusItem) {\n            var oldFocusItem = listItemWithFocus.querySelector('[tabindex=\"0\"]');\n            if (oldFocusItem) oldFocusItem.tabIndex = -1;\n            nextFocusItem.tabIndex = 0;\n            nextFocusItem.focus();\n          }\n        };\n\n        var getHorizontalIndex = function getHorizontalIndex() {\n          var allOldFocusItems = listItemWithFocus == null ? void 0 : listItemWithFocus.querySelectorAll('[tabindex]');\n          return Array.from(allOldFocusItems != null ? allOldFocusItems : []).findIndex(function (h) {\n            return h.tabIndex === 0;\n          });\n        };\n\n        var verticalNav = function verticalNav(sibling) {\n          var _getHorizontalIndex, _allFocusItems$length;\n\n          var allFocusItems = sibling == null ? void 0 : sibling.querySelectorAll('[tabindex]');\n          var nextFocusRowItemIndex = clampNumber((_getHorizontalIndex = getHorizontalIndex()) != null ? _getHorizontalIndex : 0, 0, (_allFocusItems$length = allFocusItems == null ? void 0 : allFocusItems.length) != null ? _allFocusItems$length : 1);\n          var nextFocusItem = Array.from(allFocusItems != null ? allFocusItems : [])[nextFocusRowItemIndex];\n          changeFocus(nextFocusItem);\n        };\n\n        var horizontalNav = function horizontalNav(direction) {\n          var _listItemWithFocus$qu;\n\n          var allFocusItems = Array.from((_listItemWithFocus$qu = listItemWithFocus == null ? void 0 : listItemWithFocus.querySelectorAll('[tabindex]')) != null ? _listItemWithFocus$qu : []);\n          var nextFocusIndex = clampNumber(getHorizontalIndex() + direction, 0, allFocusItems.length - 1);\n          var nextFocusItem = allFocusItems[nextFocusIndex];\n          changeFocus(nextFocusItem);\n        };\n\n        switch (e.key) {\n          case 'ArrowDown':\n            {\n              verticalNav(listItemWithFocus == null ? void 0 : listItemWithFocus.nextSibling);\n              break;\n            }\n\n          case 'ArrowUp':\n            {\n              verticalNav(listItemWithFocus == null ? void 0 : listItemWithFocus.previousSibling);\n              break;\n            }\n\n          case 'ArrowRight':\n            {\n              horizontalNav(1);\n              break;\n            }\n\n          case 'ArrowLeft':\n            {\n              horizontalNav(-1);\n              break;\n            }\n        }\n      }; // Update focus from click or screen reader\n\n\n      var onFocus = function onFocus(e) {\n        var element = e.target;\n\n        if (element instanceof HTMLElement) {\n          var focusedItems = list.querySelectorAll('[tabindex]:not([tabindex=\"-1\"])');\n          focusedItems.forEach(function (item) {\n            return item.tabIndex = -1;\n          });\n          element.tabIndex = 0;\n        }\n      };\n\n      list.addEventListener('keydown', onKeydown);\n      list.addEventListener('focusin', onFocus);\n      cleanUpFns.push(function () {\n        list.removeEventListener('keydown', onKeydown);\n        list.removeEventListener('focusin', onFocus);\n      });\n    }\n\n    return function () {\n      return cleanUpFns.forEach(function (fn) {\n        return fn();\n      });\n    };\n  }, [instructionsId]);\n  return listRef;\n};\n/**\r\n * Stolen from: https://github.com/zellwk/zellwk.com/blob/master/src/posts/2020-01-29-getting-focusable-elements.md\r\n * Gets keyboard-focusable elements within a specified element\r\n */\n\nfunction getKeyboardFocusableElements(element) {\n  return Array.from(element.querySelectorAll('a, button, input, textarea, select, details,[tabindex]:not([tabindex=\"-1\"])')).filter(function (el) {\n    return !el.hasAttribute('disabled');\n  });\n}\n\nvar useFocusOnFirstFocusable = function useFocusOnFirstFocusable() {\n  var parentRef = React__default.useCallback(function (node) {\n    if (node) {\n      var firstElement = getKeyboardFocusableElements(node)[0];\n      firstElement.focus();\n    }\n  }, []);\n  return parentRef;\n};\n/** Used primarily with dialog buttons and mounting of focused buttons in a roving tabIndex */\n\nvar useFocusOnMount = function useFocusOnMount(active) {\n  var focusRef = React__default.useRef(null);\n  React__default.useEffect(function () {\n    if (active && focusRef.current) {\n      focusRef.current.focus();\n    }\n  }, [active]);\n  return focusRef;\n};\n\nexport { Thing, useFocusOnFirstFocusable, useFocusOnMount, useRovingTabIndex };\n//# sourceMappingURL=use-roving-tabindex-a11y.esm.js.map\n","import { useMemo, useState } from \"react\";\nimport { Input } from \"../Input/Input\";\nimport scss from \"./AutoComplete.module.scss\";\nimport { Arrow } from \"../Icons/Arrow/Arrow\";\nimport { Close } from \"../Icons/Close/Close\";\nimport { Button } from \"../Button/Button\";\nimport { AutoCompleteProps, ListProps } from \"./AutoComplete.types\";\nimport useClickOutside from \"../utils/hooks/useClickOutside\";\nimport { useRovingTabIndex } from \"@20i/use-roving-tabindex-a11y\";\n\nexport const AutoComplete = (props: AutoCompleteProps) => {\n  const [search, setSearch] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const listRef = useRovingTabIndex();\n  const ref = useClickOutside(() => handleOpen(false));\n\n  function handleChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    setSearch(ev.currentTarget.value);\n  }\n\n  function handleOpen(open?: boolean) {\n    setIsOpen((prev) => open ?? !prev);\n  }\n\n  function clearInput() {\n    setSearch(\"\");\n  }\n\n  function handleKeyDown(ev: React.KeyboardEvent<HTMLDivElement>) {\n    switch (ev.key) {\n      case \"Escape\":\n        if (!isOpen) {\n          return clearInput();\n        }\n\n        handleOpen();\n        break;\n\n      case \"Enter\":\n        if (isOpen) handleOpen();\n        break;\n    }\n  }\n\n  const filterList: ListProps[] = useMemo(() => {\n    const lowerSearch = search.toLowerCase();\n\n    return props.list.filter((list) =>\n      list.item.toLowerCase().includes(lowerSearch)\n    );\n  }, [props.list, search]);\n\n  const renderNotFoundList = () => (\n    <li data-open={isOpen} className={scss.item}>\n      {props.emptyMessage ?? `no search for ${search}`}\n    </li>\n  );\n\n  const renderListItem = () =>\n    filterList.map((list, index) => (\n      <li\n        key={list.id}\n        role=\"option\"\n        data-open={isOpen}\n        className={scss.item}\n        aria-selected={search === list.item}\n      >\n        <button\n          tabIndex={index === 0 ? 0 : -1}\n          aria-expanded={isOpen}\n          className={scss.button}\n          onClick={() => {\n            handleOpen();\n            clearInput();\n            setSearch(list.item);\n            list.onSelect(list.item);\n          }}\n        >\n          {list.item}\n        </button>\n      </li>\n    ));\n\n  const renderList = () => (\n    <ul\n      ref={listRef}\n      role=\"listbox\"\n      id=\"cb1-listbox\"\n      data-open={isOpen}\n      aria-hidden={!isOpen}\n      className={scss.list}\n    >\n      {filterList.length > 0 ? renderListItem() : renderNotFoundList()}\n    </ul>\n  );\n\n  return (\n    <div ref={ref} onKeyDown={handleKeyDown} className={scss.wrapper}>\n      <Input.Root>\n        <Input.Actions>\n          <Arrow variant outline orientation={`${isOpen ? \"down\" : \"up\"}`} />\n        </Input.Actions>\n        <Input.Input\n          id=\"cb1-input\"\n          fontSize={2.4}\n          value={search}\n          role=\"combobox\"\n          spellCheck=\"false\"\n          aria-expanded={isOpen}\n          aria-autocomplete=\"list\"\n          onChange={handleChange}\n          aria-controls=\"cb1-listbox\"\n          aria-label=\"input for search\"\n          onClick={() => handleOpen()}\n          placeholder={props.placeholder}\n        />\n        <Input.Actions>\n          {search && (\n            <Button\n              id=\"cb1-button\"\n              variant=\"none\"\n              onClick={clearInput}\n              aria-expanded={isOpen}\n              data-testid=\"btn-clear\"\n              aria-controls=\"cb1-listbox\"\n              aria-label=\"clear search\"\n            >\n              <Close size={32} variant />\n            </Button>\n          )}\n        </Input.Actions>\n      </Input.Root>\n      {isOpen && renderList()}\n    </div>\n  );\n};\n"],"names":["useClickOutside","callback","ref","createRef","useEffect","handleOutsideClick","ev","nanoid","size","id","byte","useUUID","prefix","_React$useState","useState","clampNumber","num","b","useRovingTabIndex","instructionsId","listRef","React__default","list","cleanUpFns","instructions","existingCaption","existingInstructions","newCaption","_list$getAttribute","onKeydown","e","listItemWithFocus","item","changeFocus","nextFocusItem","oldFocusItem","getHorizontalIndex","allOldFocusItems","h","verticalNav","sibling","_getHorizontalIndex","_allFocusItems$length","allFocusItems","nextFocusRowItemIndex","horizontalNav","direction","_listItemWithFocus$qu","nextFocusIndex","onFocus","element","focusedItems","fn","AutoComplete","props","search","setSearch","isOpen","setIsOpen","handleOpen","handleChange","open","prev","clearInput","handleKeyDown","filterList","useMemo","lowerSearch","renderNotFoundList","jsx","scss","renderListItem","index","renderList","jsxs","Input","Arrow","Button","Close"],"mappings":"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","x_google_ignoreList":[1,2]}