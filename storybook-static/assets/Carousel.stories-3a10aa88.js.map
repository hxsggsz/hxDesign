{"version":3,"file":"Carousel.stories-3a10aa88.js","sources":["../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/Carousel/hooks/useCarousel.ts","../../node_modules/react-swipeable/es/index.js","../../src/Carousel/Carousel.tsx","../../src/Carousel/assets/image.jfif","../../src/Carousel/assets/image2.jfif","../../src/Carousel/assets/image3.jfif","../../src/Carousel/assets/image4.jfif","../../src/Carousel/assets/image5.jfif"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useCallback, useRef, useState } from \"react\";\nimport { minecraftClickSound } from \"../../utils/minecraftClickSound\";\n\nexport const useCarousel = (images: string[]) => {\n  const [selectedItem, setSelectedItem] = useState(0);\n  const [isHovering, setIsHovering] = useState(false);\n  const [direction, setDirection] = useState<\"left\" | \"right\" | null>(null);\n\n  const carouselRef = useRef<HTMLDivElement | null>(null);\n\n  function updateSelectedImage(index: number) {\n    setSelectedItem(index);\n    minecraftClickSound.play();\n  }\n\n  function updateHover() {\n    if (!carouselRef.current) return;\n\n    carouselRef.current.addEventListener(\"mouseover\", () =>\n      setIsHovering(true)\n    );\n    carouselRef.current.addEventListener(\"mouseleave\", () =>\n      setIsHovering(false)\n    );\n  }\n\n  function decrement() {\n    setDirection(\"left\");\n    const isFirst = selectedItem === 0;\n    isFirst\n      ? setSelectedItem(images.length - 1)\n      : setSelectedItem((prev) => --prev);\n  }\n\n  const increment = useCallback(() => {\n    setDirection(\"right\");\n    const isLast = images.length - 1 === selectedItem;\n    isLast ? setSelectedItem(0) : setSelectedItem((prev) => ++prev);\n  }, [images.length, selectedItem]);\n\n  return {\n    increment,\n    decrement,\n    direction,\n    isHovering,\n    updateHover,\n    carouselRef,\n    selectedItem,\n    updateSelectedImage,\n  };\n};\n","import * as React from 'react';\n\nconst LEFT = \"Left\";\nconst RIGHT = \"Right\";\nconst UP = \"Up\";\nconst DOWN = \"Down\";\n\n/* global document */\nconst defaultProps = {\n    delta: 10,\n    preventScrollOnSwipe: false,\n    rotationAngle: 0,\n    trackMouse: false,\n    trackTouch: true,\n    swipeDuration: Infinity,\n    touchEventOptions: { passive: true },\n};\nconst initialState = {\n    first: true,\n    initial: [0, 0],\n    start: 0,\n    swiping: false,\n    xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\nfunction getDirection(absX, absY, deltaX, deltaY) {\n    if (absX > absY) {\n        if (deltaX > 0) {\n            return RIGHT;\n        }\n        return LEFT;\n    }\n    else if (deltaY > 0) {\n        return DOWN;\n    }\n    return UP;\n}\nfunction rotateXYByAngle(pos, angle) {\n    if (angle === 0)\n        return pos;\n    const angleInRadians = (Math.PI / 180) * angle;\n    const x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n    const y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n    return [x, y];\n}\nfunction getHandlers(set, handlerProps) {\n    const onStart = (event) => {\n        const isTouch = \"touches\" in event;\n        // if more than a single touch don't track, for now...\n        if (isTouch && event.touches.length > 1)\n            return;\n        set((state, props) => {\n            // setup mouse listeners on document to track swipe since swipe can leave container\n            if (props.trackMouse && !isTouch) {\n                document.addEventListener(mouseMove, onMove);\n                document.addEventListener(mouseUp, onUp);\n            }\n            const { clientX, clientY } = isTouch ? event.touches[0] : event;\n            const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n            props.onTouchStartOrOnMouseDown &&\n                props.onTouchStartOrOnMouseDown({ event });\n            return Object.assign(Object.assign(Object.assign({}, state), initialState), { initial: xy.slice(), xy, start: event.timeStamp || 0 });\n        });\n    };\n    const onMove = (event) => {\n        set((state, props) => {\n            const isTouch = \"touches\" in event;\n            // Discount a swipe if additional touches are present after\n            // a swipe has started.\n            if (isTouch && event.touches.length > 1) {\n                return state;\n            }\n            // if swipe has exceeded duration stop tracking\n            if (event.timeStamp - state.start > props.swipeDuration) {\n                return state.swiping ? Object.assign(Object.assign({}, state), { swiping: false }) : state;\n            }\n            const { clientX, clientY } = isTouch ? event.touches[0] : event;\n            const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n            const deltaX = x - state.xy[0];\n            const deltaY = y - state.xy[1];\n            const absX = Math.abs(deltaX);\n            const absY = Math.abs(deltaY);\n            const time = (event.timeStamp || 0) - state.start;\n            const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n            const vxvy = [deltaX / (time || 1), deltaY / (time || 1)];\n            const dir = getDirection(absX, absY, deltaX, deltaY);\n            // if swipe is under delta and we have not started to track a swipe: skip update\n            const delta = typeof props.delta === \"number\"\n                ? props.delta\n                : props.delta[dir.toLowerCase()] ||\n                    defaultProps.delta;\n            if (absX < delta && absY < delta && !state.swiping)\n                return state;\n            const eventData = {\n                absX,\n                absY,\n                deltaX,\n                deltaY,\n                dir,\n                event,\n                first: state.first,\n                initial: state.initial,\n                velocity,\n                vxvy,\n            };\n            // call onSwipeStart if present and is first swipe event\n            eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n            // call onSwiping if present\n            props.onSwiping && props.onSwiping(eventData);\n            // track if a swipe is cancelable (handler for swiping or swiped(dir) exists)\n            // so we can call preventDefault if needed\n            let cancelablePageSwipe = false;\n            if (props.onSwiping ||\n                props.onSwiped ||\n                props[`onSwiped${dir}`]) {\n                cancelablePageSwipe = true;\n            }\n            if (cancelablePageSwipe &&\n                props.preventScrollOnSwipe &&\n                props.trackTouch &&\n                event.cancelable) {\n                event.preventDefault();\n            }\n            return Object.assign(Object.assign({}, state), { \n                // first is now always false\n                first: false, eventData, swiping: true });\n        });\n    };\n    const onEnd = (event) => {\n        set((state, props) => {\n            let eventData;\n            if (state.swiping && state.eventData) {\n                // if swipe is less than duration fire swiped callbacks\n                if (event.timeStamp - state.start < props.swipeDuration) {\n                    eventData = Object.assign(Object.assign({}, state.eventData), { event });\n                    props.onSwiped && props.onSwiped(eventData);\n                    const onSwipedDir = props[`onSwiped${eventData.dir}`];\n                    onSwipedDir && onSwipedDir(eventData);\n                }\n            }\n            else {\n                props.onTap && props.onTap({ event });\n            }\n            props.onTouchEndOrOnMouseUp && props.onTouchEndOrOnMouseUp({ event });\n            return Object.assign(Object.assign(Object.assign({}, state), initialState), { eventData });\n        });\n    };\n    const cleanUpMouse = () => {\n        // safe to just call removeEventListener\n        document.removeEventListener(mouseMove, onMove);\n        document.removeEventListener(mouseUp, onUp);\n    };\n    const onUp = (e) => {\n        cleanUpMouse();\n        onEnd(e);\n    };\n    /**\n     * The value of passive on touchMove depends on `preventScrollOnSwipe`:\n     * - true => { passive: false }\n     * - false => { passive: true } // Default\n     *\n     * NOTE: When preventScrollOnSwipe is true, we attempt to call preventDefault to prevent scroll.\n     *\n     * props.touchEventOptions can also be set for all touch event listeners,\n     * but for `touchmove` specifically when `preventScrollOnSwipe` it will\n     * supersede and force passive to false.\n     *\n     */\n    const attachTouch = (el, props) => {\n        let cleanup = () => { };\n        if (el && el.addEventListener) {\n            const baseOptions = Object.assign(Object.assign({}, defaultProps.touchEventOptions), props.touchEventOptions);\n            // attach touch event listeners and handlers\n            const tls = [\n                [touchStart, onStart, baseOptions],\n                // preventScrollOnSwipe option supersedes touchEventOptions.passive\n                [\n                    touchMove,\n                    onMove,\n                    Object.assign(Object.assign({}, baseOptions), (props.preventScrollOnSwipe ? { passive: false } : {})),\n                ],\n                [touchEnd, onEnd, baseOptions],\n            ];\n            tls.forEach(([e, h, o]) => el.addEventListener(e, h, o));\n            // return properly scoped cleanup method for removing listeners, options not required\n            cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n        }\n        return cleanup;\n    };\n    const onRef = (el) => {\n        // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n        // ignore null here\n        if (el === null)\n            return;\n        set((state, props) => {\n            // if the same DOM el as previous just return state\n            if (state.el === el)\n                return state;\n            const addState = {};\n            // if new DOM el clean up old DOM and reset cleanUpTouch\n            if (state.el && state.el !== el && state.cleanUpTouch) {\n                state.cleanUpTouch();\n                addState.cleanUpTouch = void 0;\n            }\n            // only attach if we want to track touch\n            if (props.trackTouch && el) {\n                addState.cleanUpTouch = attachTouch(el, props);\n            }\n            // store event attached DOM el for comparison, clean up, and re-attachment\n            return Object.assign(Object.assign(Object.assign({}, state), { el }), addState);\n        });\n    };\n    // set ref callback to attach touch event listeners\n    const output = {\n        ref: onRef,\n    };\n    // if track mouse attach mouse down listener\n    if (handlerProps.trackMouse) {\n        output.onMouseDown = onStart;\n    }\n    return [output, attachTouch];\n}\nfunction updateTransientState(state, props, previousProps, attachTouch) {\n    // if trackTouch is off or there is no el, then remove handlers if necessary and exit\n    if (!props.trackTouch || !state.el) {\n        if (state.cleanUpTouch) {\n            state.cleanUpTouch();\n        }\n        return Object.assign(Object.assign({}, state), { cleanUpTouch: undefined });\n    }\n    // trackTouch is on, so if there are no handlers attached, attach them and exit\n    if (!state.cleanUpTouch) {\n        return Object.assign(Object.assign({}, state), { cleanUpTouch: attachTouch(state.el, props) });\n    }\n    // trackTouch is on and handlers are already attached, so if preventScrollOnSwipe changes value,\n    // remove and reattach handlers (this is required to update the passive option when attaching\n    // the handlers)\n    if (props.preventScrollOnSwipe !== previousProps.preventScrollOnSwipe ||\n        props.touchEventOptions.passive !== previousProps.touchEventOptions.passive) {\n        state.cleanUpTouch();\n        return Object.assign(Object.assign({}, state), { cleanUpTouch: attachTouch(state.el, props) });\n    }\n    return state;\n}\nfunction useSwipeable(options) {\n    const { trackMouse } = options;\n    const transientState = React.useRef(Object.assign({}, initialState));\n    const transientProps = React.useRef(Object.assign({}, defaultProps));\n    // track previous rendered props\n    const previousProps = React.useRef(Object.assign({}, transientProps.current));\n    previousProps.current = Object.assign({}, transientProps.current);\n    // update current render props & defaults\n    transientProps.current = Object.assign(Object.assign({}, defaultProps), options);\n    // Force defaults for config properties\n    let defaultKey;\n    for (defaultKey in defaultProps) {\n        if (transientProps.current[defaultKey] === void 0) {\n            transientProps.current[defaultKey] = defaultProps[defaultKey];\n        }\n    }\n    const [handlers, attachTouch] = React.useMemo(() => getHandlers((stateSetter) => (transientState.current = stateSetter(transientState.current, transientProps.current)), { trackMouse }), [trackMouse]);\n    transientState.current = updateTransientState(transientState.current, transientProps.current, previousProps.current, attachTouch);\n    return handlers;\n}\n\nexport { DOWN, LEFT, RIGHT, UP, useSwipeable };\n//# sourceMappingURL=index.js.map\n","import { useEffect } from \"react\";\nimport { CarouselProps } from \"./Carousel.types\";\nimport scss from \"./Carousel.module.scss\";\nimport { Arrow } from \"../Icons/Arrow/Arrow\";\nimport { Button } from \"../Button/Button\";\nimport { useCarousel } from \"./hooks/useCarousel\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useSwipeable } from \"react-swipeable\";\n\nexport const Carousel = ({\n  timer = 5000,\n  showDots = true,\n  showPrevNext = true,\n  ...props\n}: CarouselProps) => {\n  const carousel = useCarousel(props.images);\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => props.isSwippable && carousel.increment(),\n    onSwipedRight: () => props.isSwippable && carousel.decrement(),\n    trackMouse: true,\n    preventScrollOnSwipe: true,\n  });\n\n  function handleKeyDown(ev: React.KeyboardEvent<HTMLDivElement>) {\n    switch (ev.key) {\n      case \"ArrowLeft\":\n        carousel.decrement();\n        break;\n      case \"ArrowRight\":\n        carousel.increment();\n        break;\n      case \"Home\":\n        carousel.updateSelectedImage(0);\n        break;\n\n      case \"End\":\n        carousel.updateSelectedImage(props.images.length - 1);\n        break;\n\n      default:\n        break;\n    }\n  }\n  useEffect(() => {\n    if (!props.autoPlay) return;\n    carousel.updateHover();\n    if (!carousel.isHovering && props.stopOnHover) {\n      const carouselTimer = setInterval(() => carousel.increment(), timer);\n      return () => clearInterval(carouselTimer);\n    }\n  }, [carousel, props.autoPlay, props.stopOnHover, timer]);\n\n  const renderDots = () =>\n    props.images.map((_, index) => {\n      const selected = index === carousel.selectedItem;\n\n      return (\n        <button\n          className={scss.btnDots}\n          onClick={() => carousel.updateSelectedImage(index)}\n          aria-label={`button to select image ${carousel.selectedItem + 1}`}\n          style={{ background: `${selected ? \"#333333\" : \"\"}` }}\n        />\n      );\n    });\n\n  const renderPrevNext = () => (\n    <div className={scss.buttonsWrapper}>\n      <Button\n        noFullScreen\n        onClick={carousel.decrement}\n        aria-controls=\"carousel-items\"\n        aria-label=\"button to preview the image\"\n      >\n        <Arrow variant outline orientation=\"left\" />\n      </Button>\n      <Button\n        noFullScreen\n        onClick={carousel.increment}\n        aria-controls=\"carousel-items\"\n        aria-label=\"button to go to next image\"\n      >\n        <Arrow variant outline />\n      </Button>\n    </div>\n  );\n\n  return (\n    <div\n      {...handlers}\n      id=\"carousel-items\"\n      className={scss.wrapper}\n      onKeyDown={handleKeyDown}\n      ref={carousel.carouselRef}\n      aria-label=\"custom carousel\"\n      aria-roledescription=\"carousel\"\n    >\n      <div\n        role=\"group\"\n        aria-roledescription=\"slide\"\n        className={scss.imageWrapper}\n        aria-label={`${carousel.selectedItem} of ${props.images.length - 1}`}\n      >\n        <AnimatePresence key={carousel.selectedItem}>\n          <motion.img\n            initial={{ x: carousel.direction === \"left\" ? -100 : 100 }}\n            animate={{ x: 0 }}\n            exit={{ x: carousel.direction === \"right\" ? -100 : 100 }}\n            transition={{ type: \"keyframes\" }}\n            className={scss.image}\n            src={props.images[carousel.selectedItem]}\n            alt={`carousel ${carousel.selectedItem}`}\n          />\n        </AnimatePresence>\n      </div>\n      {showDots && <div className={scss.dotsWrapper}>{renderDots()}</div>}\n\n      {showPrevNext && renderPrevNext()}\n    </div>\n  );\n};\n","export default \"__VITE_ASSET__ffa29e76__\"","export default \"__VITE_ASSET__4908c62a__\"","export default \"__VITE_ASSET__6593629b__\"","export default \"__VITE_ASSET__be07009a__\"","export default \"__VITE_ASSET__c7f62f2e__\""],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","useForceUpdate","forcedRenderCount","setForcedRenderCount","useState","forceRender","useCallback","frame","PopChildMeasure","React.Component","prevProps","element","size","PopChild","children","isPresent","id","useId","ref","useInsertionEffect","width","height","top","left","style","React.createElement","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","isComplete","_","key","React.useEffect","PresenceContext","useUnmountEffect","callback","useEffect","getChildKey","child","updateChildLookup","allChildren","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","useContext","LayoutGroupContext","filteredChildren","childrenToRender","exitingChildren","presentChildren","isInitialRender","React.Fragment","presentKeys","targetKeys","numPresent","i","component","insertionIndex","exitingComponent","onExit","removeIndex","presentChild","cloneElement","useCarousel","images","selectedItem","setSelectedItem","isHovering","setIsHovering","direction","setDirection","carouselRef","updateSelectedImage","index","minecraftClickSound","updateHover","decrement","prev","isLast","LEFT","RIGHT","UP","DOWN","defaultProps","initialState","mouseMove","mouseUp","touchEnd","touchMove","touchStart","getDirection","absX","absY","deltaX","deltaY","rotateXYByAngle","pos","angle","angleInRadians","x","y","getHandlers","set","handlerProps","onStart","event","isTouch","state","props","onMove","onUp","clientX","clientY","xy","time","velocity","vxvy","dir","delta","eventData","cancelablePageSwipe","onEnd","onSwipedDir","cleanUpMouse","e","attachTouch","el","cleanup","baseOptions","tls","h","o","output","addState","updateTransientState","previousProps","useSwipeable","options","trackMouse","transientState","React.useRef","transientProps","defaultKey","handlers","React.useMemo","stateSetter","Carousel","timer","showDots","showPrevNext","carousel","handleKeyDown","ev","carouselTimer","renderDots","selected","jsx","scss","renderPrevNext","jsxs","Button","Arrow","motion","image","image2","image3","image4","image5"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,7]}